///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               07/Jul/2013  18:21:46 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\duanxinuar /
//                          t1\duanxinuart1.c                                 /
//    Command line       =  -f D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\P /
//                          rojects\zstack\Samples\SampleApp\CC2530DB\..\..\. /
//                          .\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ         /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f   /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\T /
//                          ools\CC2530DB\f8wConfig.cfg (-DSECURE=0           /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0x266F                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\TIzigbee\TIZStackµÄÎÂÊª /
//                          ¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Projects\zstack\Samples\Sample /
//                          App\CC2530DB\duanxinuart1\duanxinuart1.c -D       /
//                          ZAPP_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC  /
//                          -D xLCD_SUPPORTED=DEBUG -lC                       /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\Coordinato /
//                          rEB\List\ -lA D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏ /
//                          ß²É¼¯¼à¿Ø\Projects\zstack\Samples\SampleApp\CC253 /
//                          0DB\CoordinatorEB\List\ --diag_suppress           /
//                          Pe001,Pa010 -o D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞ /
//                          Ïß²É¼¯¼à¿Ø\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\CoordinatorEB\Obj\ -e --require_prototypes   /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 8    /
//                          -I D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\P /
//                          rojects\zstack\Samples\SampleApp\CC2530DB\ -I     /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\SOURCE\ /
//                           -I D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\ /
//                          Projects\zstack\Samples\SampleApp\CC2530DB\..\..\ /
//                          ..\ZMAIN\TI2530DB\ -I D:\TIzigbee\TIZStackµÄÎÂÊª¶ /
//                          ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Projects\zstack\Samples\SampleA /
//                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I      /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\HAL\INCLUDE\ -I                   /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\HAL\TARGET\CC2530EB\ -I           /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\OSAL\MCU\CCSOC\ -I                /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\OSAL\INCLUDE\ -I                  /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\AF\ -I                      /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\NWK\ -I                     /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\SEC\ -I                     /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\SAPI\ -I                    /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\SYS\ -I                     /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\STACK\ZDO\ -I                     /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\ZMAC\F8W\ -I                      /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\ZMAC\ -I                          /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\SERVICES\SADDR\ -I                /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\SERVICES\SDATA\ -I                /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\MAC\INCLUDE\ -I                   /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\MAC\HIGH_LEVEL\ -I                /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\MAC\LOW_LEVEL\srf04\ -I           /
//                          D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\..\..\..\. /
//                          .\..\COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\  /
//                          -I "C:\Program Files\IAR Systems\Embedded         /
//                          Workbench 5.3 Evaluation version\8051\INC\" -I    /
//                          "C:\Program Files\IAR Systems\Embedded Workbench  /
//                          5.3 Evaluation version\8051\INC\CLIB\" -Ohz       /
//    List file          =  D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Proj /
//                          ects\zstack\Samples\SampleApp\CC2530DB\Coordinato /
//                          rEB\List\duanxinuart1.s51                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME duanxinuart1

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ??printsuart?relay
        EXTERN ??senduart_a_byte?relay
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??InitUart1?relay
        FUNCTION ??InitUart1?relay,0203H
        PUBLIC ??delay_50ms?relay
        FUNCTION ??delay_50ms?relay,0203H
        PUBLIC ??printsuart?relay
        FUNCTION ??printsuart?relay,0203H
        PUBLIC ??send_call?relay
        FUNCTION ??send_call?relay,0203H
        PUBLIC ??send_cmgf?relay
        FUNCTION ??send_cmgf?relay,0203H
        PUBLIC ??send_cmgs?relay
        FUNCTION ??send_cmgs?relay,0203H
        PUBLIC ??send_csca?relay
        FUNCTION ??send_csca?relay,0203H
        PUBLIC ??sendmessage?relay
        FUNCTION ??sendmessage?relay,0203H
        PUBLIC ??senduart_a_byte?relay
        FUNCTION ??senduart_a_byte?relay,0203H
        PUBLIC AT_CMGF
        PUBLIC AT_CMGS
        PUBLIC AT_CSCA
        PUBLIC InitUart1
        FUNCTION InitUart1,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBWEAK P1SEL
        PUBWEAK P2DIR
        PUBWEAK PERCFG
        PUBWEAK U1BAUD
        PUBWEAK U1DBUF
        PUBWEAK U1GCR
        PUBWEAK U1UCR
        PUBWEAK _A_IEN0
        PUBWEAK _A_IRCON2
        PUBWEAK _A_TCON
        PUBWEAK _A_U1CSR
        PUBLIC call_number
        PUBLIC delay_50ms
        FUNCTION delay_50ms,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC message
        PUBLIC printsuart
        FUNCTION printsuart,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC readflag
        PUBLIC send_call
        FUNCTION send_call,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC send_cmgf
        FUNCTION send_cmgf,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC send_cmgs
        FUNCTION send_cmgs,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC send_csca
        FUNCTION send_csca,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC sendmessage
        FUNCTION sendmessage,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC senduart_a_byte
        FUNCTION senduart_a_byte,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
InitUart1           SYMBOL "InitUart1"
??InitUart1?relay   SYMBOL "?relay", InitUart1
delay_50ms          SYMBOL "delay_50ms"
??delay_50ms?relay  SYMBOL "?relay", delay_50ms
printsuart          SYMBOL "printsuart"
??printsuart?relay  SYMBOL "?relay", printsuart
send_call           SYMBOL "send_call"
??send_call?relay   SYMBOL "?relay", send_call
send_cmgf           SYMBOL "send_cmgf"
??send_cmgf?relay   SYMBOL "?relay", send_cmgf
send_cmgs           SYMBOL "send_cmgs"
??send_cmgs?relay   SYMBOL "?relay", send_cmgs
send_csca           SYMBOL "send_csca"
??send_csca?relay   SYMBOL "?relay", send_csca
sendmessage         SYMBOL "sendmessage"
??sendmessage?relay SYMBOL "?relay", sendmessage
senduart_a_byte     SYMBOL "senduart_a_byte"
??senduart_a_byte?relay SYMBOL "?relay", senduart_a_byte

// D:\TIzigbee\TIZStackµÄÎÂÊª¶ÈÑÌÎíÎÞÏß²É¼¯¼à¿Ø\Projects\zstack\Samples\SampleApp\CC2530DB\duanxinuart1\duanxinuart1.c
//    1 /***********************************************************************************
//    2 Filename: duanxinuart1.c
//    3 Prozessor: 80C51 family
//    4 
//    5 ***********************************************************************************/
//    6 #include <ioCC2530.h>

        ASEGN SFR_AN:DATA:NOROOT,088H
// union <unnamed> volatile __sfr _A_TCON
_A_TCON:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f1H
// unsigned char volatile __sfr PERCFG
PERCFG:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f8H
// union <unnamed> volatile __sfr _A_U1CSR
_A_U1CSR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f9H
// unsigned char volatile __sfr U1DBUF
U1DBUF:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0faH
// unsigned char volatile __sfr U1BAUD
U1BAUD:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fbH
// unsigned char volatile __sfr U1UCR
U1UCR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fcH
// unsigned char volatile __sfr U1GCR
U1GCR:
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0ffH
// unsigned char volatile __sfr P2DIR
P2DIR:
        DS 1
//    7 #include "duanxinuart1.h"
//    8 #include "hal_board_cfg.h"
//    9 #include "hal_defs.h"
//   10 #include "hal_types.h"
//   11 #define uint unsigned int
//   12 #define uchar unsigned char
//   13 

        RSEG XDATA_Z:XDATA:NOROOT(0)
//   14 extern int readflag=0;
readflag:
        DS 2
        REQUIRE __INIT_XDATA_Z
//   15 extern  unsigned char *duanxinStr;
//   16 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   17 void  delay_50ms(uint t)
delay_50ms:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function delay_50ms
//   18  {
        ; Saved register size: 0
        ; Auto size: 0
        SJMP    ??delay_50ms_0
//   19 	uint j;
//   20 	for(;t>0;t--)
//   21 	for(j=6245;j>0;j--);
??delay_50ms_1:
        MOV     A,R2
        ADD     A,#-0x1
        DEC     R2
        MOV     A,R3
        ADDC    A,#-0x1
        MOV     R3,A
??delay_50ms_0:
        MOV     A,R2
        JNZ     ??delay_50ms_2
        MOV     A,R3
??delay_50ms_2:
        JNZ     ??delay_50ms_1
//   22 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//   23 /*****************************************
//   24 //uart1³õÊ¼»¯
//   25 *****************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   26 void InitUart1(void)
InitUart1:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function InitUart1
//   27 {	
        ; Saved register size: 0
        ; Auto size: 0
//   28  // CLKCONCMD &= ~0x40;                          //ÉèÖÃÏµÍ³Ê±ÖÓÔ´Îª32MHZ¾§Õñ
//   29  // while(CLKCONSTA & 0x40);                     //µÈ´ý¾§ÕñÎÈ¶¨
//   30  // CLKCONCMD &= ~0x47;                          //ÉèÖÃÏµÍ³Ö÷Ê±ÖÓÆµÂÊÎª32MHZ
//   31   
//   32   P1SEL |= 0xc0; //1100 0000  0ÎªÆÕÍ¨¿Ú£¬1ÎªÍâÉè P1 6TX 7RX ÎªUART1
        ORL     0xf4,#0xc0
        MOV     A,0xf4
//   33   P2DIR=0X40;
        MOV     0xff,#0x40
//   34   U1CSR |= 0x80;
        SETB    0xf8.7
//   35   PERCFG |= 0x02;
        ORL     0xf1,#0x2
//   36   //HAL_BOARD_INIT();//°å¼¶³õÊ¼»¯
//   37   U1GCR =9;    //BAUD_E = 9  //19200 
        MOV     0xfc,#0x9
//   38   U1BAUD = 59;  //BAUD_M =59   ²¨ÌØÂÊ¼ÆËã¹«Ê½ (256+BAUD_M)
        MOV     0xfa,#0x3b
//   39   //UART_SETUP(1, 19200, HIGH_STOP);  // ´®¿ÚÉèÖÃ
//   40   UTX1IF=1;
        SETB    0xe8.2
//   41   URX1IF=0;
        CLR     0x88.7
//   42   U1UCR |=0x82;
        ORL     0xfb,#0x82
        MOV     A,0xfb
//   43 
//   44   U1CSR |= 0X40;				//ÔÊÐí½ÓÊÕ
        SETB    0xf8.6
//   45   IEN0 |= 0x88;				//¿ª×ÜÖÐ¶Ï£¬½ÓÊÕÖÐ¶Ï
        ORL     0xa8,#0x88
        MOV     A,0xa8
//   46   
//   47 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
        REQUIRE _A_TCON
        REQUIRE _A_IEN0
        REQUIRE _A_IRCON2
        REQUIRE PERCFG
        REQUIRE P1SEL
        REQUIRE _A_U1CSR
        REQUIRE U1BAUD
        REQUIRE U1UCR
        REQUIRE U1GCR
        REQUIRE P2DIR
//   48 
//   49 /*********************************************************************
//   50  * º¯ÊýÃû³Æ£ºsenduart_a_byte
//   51  * ¹¦    ÄÜ£º·¢ËÍÒ»¸ö×Ö·û
//   52  * Èë¿Ú²ÎÊý£ºc  ·¢ËÍµÄ×Ö·û
//   53  * ³ö¿Ú²ÎÊý£ºÎÞ
//   54  * ·µ »Ø Öµ£ºÎÞ
//   55  ********************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   56 uint8 senduart_a_byte(char c)  
senduart_a_byte:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function senduart_a_byte
//   57 {
        ; Saved register size: 0
        ; Auto size: 0
//   58   /*if(c == '\n')  
//   59  {
//   60     while(!UTX1IF);
//   61    U1DBUF = 0x0d;   
//   62  }*/
//   63   
//   64    while (!UTX1IF);
??senduart_a_byte_0:
        MOV     C,0xe8.2
        JNC     ??senduart_a_byte_0
//   65    UTX1IF = 0;
        CLR     0xe8.2
//   66    return(U1DBUF = c);
        MOV     0xf9,R1
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
        REQUIRE _A_IRCON2
        REQUIRE U1DBUF
//   67 }
//   68 
//   69 
//   70 /*********************************************************************
//   71  * º¯ÊýÃû³Æ£ºread_a_byte
//   72  * ¹¦    ÄÜ£º½ÓÊÕÒ»¸ö×Ö·û
//   73  * Èë¿Ú²ÎÊý£ºÎÞ
//   74  * ³ö¿Ú²ÎÊý£º
//   75  * ·µ »Ø Öµ£º½ÓÊÕµÄ×Ö·û
//   76  ********************************************************************/
//   77 //uint8 read_a_byte( )  
//   78 //{
//   79  
//   80 //   char b;
//   81 //   if(URX1IF)
//   82 //   {
//   83 //     b=U1DBUF;
//   84 //     readflag=1;
//   85 //     URX1IF = 0;
//   86 //   }
//   87 //   return (b);
//   88 //}
//   89 
//   90 /*********************************************************************
//   91  * º¯ÊýÃû³Æ£ºprintsuart
//   92  * ¹¦    ÄÜ£º·¢ËÍÒ»´®×Ö·û
//   93  * Èë¿Ú²ÎÊý£ºs         ×Ö·û´®Ö¸Õë
//   94  * ³ö¿Ú²ÎÊý£ºÎÞ
//   95  * ·µ »Ø Öµ£ºÎÞ
//   96  ********************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   97 void printsuart(char *s)
printsuart:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function printsuart
//   98 {
        FUNCALL printsuart, senduart_a_byte
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        SJMP    ??printsuart_0
//   99  //uint8 i = 0;
//  100  
//  101   while(*s)//while(s[i] != '\0')    // ÅÐ¶Ï×Ö·û´®ÊÇ·ñ½áÊø
//  102   {
//  103     senduart_a_byte(*s);// ·¢ËÍÒ»×Ö½Ú
??printsuart_1:
        ; Setup parameters for call to function senduart_a_byte
        LCALL   ??senduart_a_byte?relay
//  104     s++;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  105   }
??printsuart_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R1,A
        JNZ     ??printsuart_1
//  106  
//  107 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3
//  108 
//  109 /*********************************************************************
//  110  * º¯ÊýÃû³Æ£ºreadinstr
//  111  * ¹¦    ÄÜ£º½ÓÊÕÒ»´®×Ö·û
//  112  * Èë¿Ú²ÎÊý£ºÎÞ
//  113  * ³ö¿Ú²ÎÊý£ºÎÞ
//  114  * ·µ »Ø Öµ£º×Ö·û´®
//  115  ********************************************************************/
//  116 //void readinstr( )
//  117 //{
//  118 
//  119 //  if(URX1IF)
//  120  //  {
//  121  //   *duanxinStr= U1DBUF; //±£´æ×Ö·û
//  122  //   URX1IF=0; //ÇåURX1IF
//  123  //    readflag=1;
//  124  //  }
//  125  //while(*duanxinStr!= '\0') //ÅÐ¶ÏÊÇ·ñµ½ÁË×Ö·û´®µÄÎ²²¿
//  126  //{
//  127  //  while(!URX1IF); //¿ÕÓï¾äÅÐ¶Ï×Ö·ûÊÇ·ñÊÕÍê
//  128  // duanxinStr++; //×Ö·û´®Ö¸Õë¼ÓÒ»
//  129  // *duanxinStr= U1DBUF; //±£´æ×Ö·û
//  130  //  URX1IF=0; //ÇåURX1IF
//  131  //}
//  132 //}
//  133 
//  134 
//  135 /*****************************************
//  136 //uart1·¢ËÍ
//  137 *****************************************/
//  138 

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  139 char message[]={"Warning:the gas leak!"};
message:
        DS 22
        REQUIRE `?<Initializer for message>`
        REQUIRE __INIT_XDATA_I
//  140 

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  141 char AT_CMGF[]={"AT+CMGF=1"};//ÉèÖÃ¶ÌÐÅµÄ¸ñÊ½ÎªPDU¸ñÊ½
AT_CMGF:
        DS 10
        REQUIRE `?<Initializer for AT_CMGF>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  142 char AT_CSCA[]={"AT+CSCA=\"+8613800290500\""};//ÉèÖÃÒÆ¶¯·þÎñÖÐÐÄºÅÂë
AT_CSCA:
        DS 25
        REQUIRE `?<Initializer for AT_CSCA>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  143 char AT_CMGS[]={"AT+CMGS=\"1252018700443632\""};//·¢ËÍ¶ÌÐÅÖ¸Áî£¬ÐèÒª½ÓÊÕ¶ÌÐÅµÄÊÖ»úºÅÂë,×¢ÒâÒª¶¨ÒåÎª×Ö·û´®£¨\0£©
AT_CMGS:
        DS 27
        REQUIRE `?<Initializer for AT_CMGS>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA
//  144 char  call_number[]={"ATD15191897096;"};
call_number:
        DS 16
        REQUIRE `?<Initializer for call_number>`
        REQUIRE __INIT_XDATA_I
//  145 //char s1=0x0D;
//  146 //char s2=0x0A;

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  147 void send_call(void)
send_call:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function send_call
//  148 {
        FUNCALL send_call, printsuart
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_call, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_call, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  149 	printsuart(call_number);
        ; Setup parameters for call to function printsuart
        MOV     R2,#(call_number & 0xff)
        MOV     R3,#((call_number >> 8) & 0xff)
        SJMP    ?Subroutine2
        CFI EndBlock cfiBlock4
//  150         senduart_a_byte(0x0D);
//  151         senduart_a_byte(0x0A);
//  152 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  153 void send_cmgf(void)
send_cmgf:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function send_cmgf
//  154 {
        FUNCALL send_cmgf, printsuart
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_cmgf, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_cmgf, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  155 	printsuart(AT_CMGF);
        ; Setup parameters for call to function printsuart
        MOV     R2,#(AT_CMGF & 0xff)
        MOV     R3,#((AT_CMGF >> 8) & 0xff)
        SJMP    ?Subroutine2
        CFI EndBlock cfiBlock5
//  156         senduart_a_byte(0x0D);
//  157         senduart_a_byte(0x0A);
//  158 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  159 void send_csca(void)
send_csca:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function send_csca
//  160 {
        FUNCALL send_csca, printsuart
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_csca, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_csca, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  161 	printsuart(AT_CSCA);
        ; Setup parameters for call to function printsuart
        MOV     R2,#(AT_CSCA & 0xff)
        MOV     R3,#((AT_CSCA >> 8) & 0xff)
        CFI EndBlock cfiBlock6
        REQUIRE ?Subroutine2
        ; // Fall through to label ?Subroutine2
//  162         senduart_a_byte(0x0D);
//  163         senduart_a_byte(0x0A);
//  164 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        LCALL   ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock7
??CrossCallReturnLabel_0:
        REQUIRE ??Subroutine3_0
        ; // Fall through to label ??Subroutine3_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine3_0:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiCond9 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_0
        CFI (cfiCond10) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond10) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond10) CFA_SP SP+-5
        CFI Block cfiCond11 Using cfiCommon0
        CFI (cfiCond11) NoFunction
        CFI (cfiCond11) Conditional ??CrossCallReturnLabel_0
        CFI (cfiCond11) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond11) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond11) CFA_SP SP+-5
        CFI Block cfiCond12 Using cfiCommon0
        CFI (cfiCond12) NoFunction
        CFI (cfiCond12) Conditional ??CrossCallReturnLabel_0
        CFI (cfiCond12) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond12) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond12) CFA_SP SP+-5
        CFI Block cfiPicker13 Using cfiCommon1
        CFI (cfiPicker13) NoFunction
        CFI (cfiPicker13) Picker
        LCALL   ??printsuart?relay
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        LCALL   ?Subroutine1 & 0xFFFF
??CrossCallReturnLabel_1:
        RET
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiCond11
        CFI EndBlock cfiCond12
        CFI EndBlock cfiPicker13

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond14 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_1, ??CrossCallReturnLabel_0
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond15 Using cfiCommon0
        CFI (cfiCond15) NoFunction
        CFI (cfiCond15) Conditional ??CrossCallReturnLabel_1, ??CrossCallReturnLabel_0
        CFI (cfiCond15) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond15) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond15) CFA_SP SP+-5
        CFI Block cfiCond16 Using cfiCommon0
        CFI (cfiCond16) NoFunction
        CFI (cfiCond16) Conditional ??CrossCallReturnLabel_1, ??CrossCallReturnLabel_0
        CFI (cfiCond16) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond16) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond16) CFA_SP SP+-5
        CFI Block cfiCond17 Using cfiCommon0
        CFI (cfiCond17) NoFunction
        CFI (cfiCond17) Conditional ??CrossCallReturnLabel_1, ??CrossCallReturnLabel_0
        CFI (cfiCond17) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond17) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond17) CFA_SP SP+-5
        CFI Block cfiCond18 Using cfiCommon0
        CFI (cfiCond18) NoFunction
        CFI (cfiCond18) Conditional ??CrossCallReturnLabel_2
        CFI (cfiCond18) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond18) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond18) CFA_SP SP+-5
        CFI Block cfiPicker19 Using cfiCommon1
        CFI (cfiPicker19) NoFunction
        CFI (cfiPicker19) Picker
        MOV     R1,#0xd
        LCALL   ??senduart_a_byte?relay
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        ; Setup parameters for call to function senduart_a_byte
        MOV     R1,#0xa
        LCALL   ??senduart_a_byte?relay
        RET
        CFI EndBlock cfiCond14
        CFI EndBlock cfiCond15
        CFI EndBlock cfiCond16
        CFI EndBlock cfiCond17
        CFI EndBlock cfiCond18
        CFI EndBlock cfiPicker19

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  165 void send_cmgs(void)
send_cmgs:
        CFI Block cfiBlock20 Using cfiCommon0
        CFI Function send_cmgs
//  166 {
        FUNCALL send_cmgs, printsuart
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_cmgs, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL send_cmgs, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  167 	printsuart(AT_CMGS);
        ; Setup parameters for call to function printsuart
        MOV     R2,#(AT_CMGS & 0xff)
        MOV     R3,#((AT_CMGS >> 8) & 0xff)
        SJMP    ?Subroutine2
        CFI EndBlock cfiBlock20
//  168         senduart_a_byte(0x0D);
//  169         senduart_a_byte(0x0A);
//  170 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  171 void sendmessage(void)
sendmessage:
        CFI Block cfiBlock21 Using cfiCommon0
        CFI Function sendmessage
//  172 {
        FUNCALL sendmessage, printsuart
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL sendmessage, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL sendmessage, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL sendmessage, senduart_a_byte
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  173 	printsuart(message);
        ; Setup parameters for call to function printsuart
        MOV     R2,#(message & 0xff)
        MOV     R3,#((message >> 8) & 0xff)
        LCALL   ??printsuart?relay
//  174         //delay_50ms(30);
//  175 	senduart_a_byte(0x1A);
        ; Setup parameters for call to function senduart_a_byte
        MOV     R1,#0x1a
        LCALL   ??senduart_a_byte?relay
//  176         senduart_a_byte(0x0D);
        ; Setup parameters for call to function senduart_a_byte
        LCALL   ?Subroutine1 & 0xFFFF
//  177         senduart_a_byte(0x0A);
//  178 }
??CrossCallReturnLabel_2:
        SJMP    ??Subroutine3_0
        CFI EndBlock cfiBlock21

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for message>`:
        DB "Warning:the gas leak!"

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for AT_CMGF>`:
        DB "AT+CMGF=1"

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for AT_CSCA>`:
        DB "AT+CSCA=\"+8613800290500\""

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for AT_CMGS>`:
        DB "AT+CMGS=\"1252018700443632\""

        RSEG XDATA_ID:CODE:NOROOT(0)
        DATA
`?<Initializer for call_number>`:
        DB "ATD15191897096;"

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??delay_50ms?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    delay_50ms

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??InitUart1?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    InitUart1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??senduart_a_byte?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    senduart_a_byte

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??printsuart?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    printsuart

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??send_call?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    send_call

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??send_cmgf?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    send_cmgf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??send_csca?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    send_csca

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??send_cmgs?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    send_cmgs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??sendmessage?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    sendmessage

        END
//  179 
//  180 
//  181 /*****************************************
//  182 //uart1½ÓÊÕ
//  183 *****************************************/ 
//  184 	
//  185 
//  186 
// 
// 191 bytes in segment BANKED_CODE
//  54 bytes in segment BANK_RELAYS
//  11 bytes in segment SFR_AN
// 100 bytes in segment XDATA_I
// 100 bytes in segment XDATA_ID
//   2 bytes in segment XDATA_Z
// 
// 345 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 11 bytes shared)
// 102 bytes of XDATA memory
//
//Errors: none
//Warnings: none
